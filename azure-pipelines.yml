trigger:
  - main

pool: 'Default'

variables:
  baseUrl: 'https://rahulshettyacademy.com/AutomationPractice/'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    npm ci
  displayName: 'Install Dependencies'

- script: |
    npm install cypress
    npm install typescript
    npm install @bahmutov/cypress-esbuild-preprocessor
    npm install @badeball/cypress-cucumber-preprocessor
    npm install cypress-mochawesome-reporter
    npm install mochawesome
    npm install mochawesome-merge
    npm install mochawesome-report-generator
    npm install @types/node --save-dev
  displayName: 'Install Cypress and Required Packages'

- script: |
    npx cypress verify
  displayName: 'Verify Cypress'

- script: |
    # Create the reports directory
    mkdir -p cypress/reports/mocha
    mkdir -p cypress/reports/html

    # Run Cypress tests with Mochawesome reporter
    npx cypress run --config baseUrl="$(baseUrl)" --reporter cypress-mochawesome-reporter
    
    # Merge the reports if there are multiple
    npx mochawesome-merge cypress/reports/mocha/*.json > cypress/reports/html/report.json
    
    # Generate HTML report
    npx marge cypress/reports/html/report.json -f report -o cypress/reports/html
  displayName: 'Run Cypress Tests and Generate Reports'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/cypress/results/*.xml'
    mergeTestResults: true
    testRunTitle: 'Cypress Tests'
  condition: succeededOrFailed()
  displayName: 'Publish Test Results'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/cypress/videos'
    artifact: 'cypress-videos'
    publishLocation: 'pipeline'
  condition: succeededOrFailed()
  displayName: 'Publish Videos'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/cypress/screenshots'
    artifact: 'cypress-screenshots'
    publishLocation: 'pipeline'
  condition: failed()
  displayName: 'Publish Screenshots'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/cypress/reports/html'
    artifact: 'cypress-html-report'
    publishLocation: 'pipeline'
  condition: succeededOrFailed()
  displayName: 'Publish HTML Reports'